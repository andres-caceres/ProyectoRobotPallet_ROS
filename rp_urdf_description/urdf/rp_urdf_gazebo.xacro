<?xml version="1.0" ?>

<robot name="rp_urdf" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Begin - Gazebo definition -->

  <gazebo reference="base">
    <material>Gazebo/White</material>
  </gazebo>

 <!-- Ruedas motrices plugin for gazebo -->

  <gazebo reference="rueda_der_1">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="rueda_izq_1">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <!-- End - Ruedas motrices plugin -->


 <!-- Ruedas caster plugin for gazebo -->

  <gazebo reference="caster_izq_1">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_der_1">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

<!-- End - Ruedas caster plugin -->

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>rueda_izq_base_link</leftJoint>
      <rightJoint>rueda_der_base_link</rightJoint>
      <wheelSeparation>0.840</wheelSeparation>
      <wheelDiameter>0.230</wheelDiameter>
      <wheelAcceleration>0.02</wheelAcceleration>
      <wheelTorque>1000</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishOdom>true</publishOdom>
      <robotBaseFrame>base</robotBaseFrame>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>

    </plugin>
  </gazebo>

<!-- Deep camera plugin for gazebo -->

  <gazebo reference="front_camera_link">
    <material>Gazebo/Blue</material>
  </gazebo>
<!-- IMU representation -->
<gazebo reference="imu_link">
    <material>Gazebo/Yellow</material>
  </gazebo>

   <!-- LIDAR IZQ representation -->
  <gazebo reference="lidar_izq_link">
    <material>Gazebo/Red</material>
  </gazebo>

   <!-- LIDAR CENTRAL representation -->
  <gazebo reference="lidar_cen_link">
    <material>Gazebo/Red</material>
  </gazebo>
    <!-- LIDAR DER representation -->
  <gazebo reference="lidar_der_link">
    <material>Gazebo/Red</material>
  </gazebo>

  
 <gazebo reference="front_camera_link">
  <sensor name="front_camera_link" type="depth">
    <update_rate>20</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="front_camera_link_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>front_camera_link_ir</cameraName>
      <imageTopicName>/front_camera_link/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/front_camera_link/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/front_camera_link/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/front_camera_link/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/front_camera_link/depth/points</pointCloudTopicName>
      <frameName>frame_camara</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

  <!-- End - Deep camera plugin -->

  <!-- imu_link -->

   <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!-- imu_link  end-->



 

    <!-- laser2 -->
  <gazebo reference="lidar_cen_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor2">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/rrbot/laser1/scan</topicName>
        <frameName>lidar_cen_link</frameName>
      </plugin>
    </sensor>
  </gazebo>






</robot>